{
  "build_game": {
    "kind": "function",
    "name": "build_game",
    "description": "<p>Builds the game.\nProcesses the initialization and updating of the game.\nAll created GameObjects and their properties are passed into the game.</p>",
    "params": [],
    "retType": "BuildGame"
  },
  "create_audio": {
    "kind": "function",
    "name": "create_audio",
    "description": "<p>Create an audio clip that can be referenced.\nSource Academy assets can be found at https://source-academy-assets.s3-ap-southeast-1.amazonaws.com/ with Ctrl+f \".mp3\".\nPhaser audio assets can be found at https://labs.phaser.io/assets/audio.\nPhaser sound effects assets can be found at https://labs.phaser.io/assets/audio/SoundEffects/.\nIf Phaser assets are unavailable, go to https://github.com/photonstorm/phaser3-examples/tree/master/public/assets\nto get the asset path and append it to <code>https://labs.phaser.io/assets/</code>.\nThis function should not be called in your update function.</p>",
    "params": [
      [
        "audio_url",
        "string"
      ],
      [
        "volume_level",
        "number"
      ]
    ],
    "retType": "AudioClip"
  },
  "create_circle": {
    "kind": "function",
    "name": "create_circle",
    "description": "<p>Creates a CircleGameObject that takes in circle shape properties.</p>",
    "params": [
      [
        "radius",
        "number"
      ]
    ],
    "retType": "ShapeGameObject"
  },
  "create_rectangle": {
    "kind": "function",
    "name": "create_rectangle",
    "description": "<p>Creates a RectangleGameObject that takes in rectangle shape properties.</p>",
    "params": [
      [
        "width",
        "number"
      ],
      [
        "height",
        "number"
      ]
    ],
    "retType": "ShapeGameObject"
  },
  "create_sprite": {
    "kind": "function",
    "name": "create_sprite",
    "description": "<p>Creates a GameObject that contains a Sprite image reference.\nSource Academy assets can be used by specifying path without the prepend.\nSource Academy assets can be found at https://source-academy-assets.s3-ap-southeast-1.amazonaws.com/ with Ctrl+f \".png\".\nPhaser assets can be found at https://labs.phaser.io/assets/.\nIf Phaser assets are unavailable, go to https://github.com/photonstorm/phaser3-examples/tree/master/public/assets\nto get the asset path and append it to <code>https://labs.phaser.io/assets/</code>.\nAssets from other websites can also be used if they support Cross-Origin Resource Sharing (CORS), but the full path must be specified.</p>",
    "params": [
      [
        "image_url",
        "string"
      ]
    ],
    "retType": "SpriteGameObject"
  },
  "create_text": {
    "kind": "function",
    "name": "create_text",
    "description": "<p>Creates a GameObject that contains a text reference.</p>",
    "params": [
      [
        "text",
        "string"
      ]
    ],
    "retType": "TextGameObject"
  },
  "create_triangle": {
    "kind": "function",
    "name": "create_triangle",
    "description": "<p>Creates a TriangleGameObject that takes in an downright isosceles triangle shape properties.</p>",
    "params": [
      [
        "width",
        "number"
      ],
      [
        "height",
        "number"
      ]
    ],
    "retType": "ShapeGameObject"
  },
  "debug_log": {
    "kind": "function",
    "name": "debug_log",
    "description": "<p>Logs any information passed into it within the <code>update_loop</code>.\nDisplays the information in the top-left corner of the canvas only if debug mode is enabled.\nCalling <code>display</code> within the <code>update_loop</code> function will not work as intended, so use <code>debug_log</code> instead.</p>",
    "params": [
      [
        "info",
        "string"
      ]
    ],
    "retType": "void"
  },
  "enable_debug": {
    "kind": "function",
    "name": "enable_debug",
    "description": "<p>Enables debug mode.\nHit box interaction between pointer and GameObjects are shown with a green outline in debug mode.\nHit box interaction between GameObjects is based off a rectangular area instead, which is not reflected.\ndebug_log(...) information is shown on the top-left corner of the canvas.</p>",
    "params": [],
    "retType": "void"
  },
  "gameobjects_overlap": {
    "kind": "function",
    "name": "gameobjects_overlap",
    "description": "<p>Checks if two gameobjects overlap with each other, using a rectangular bounding box.\nThis bounding box is rectangular, for all GameObjects.\nThis function should be called in your update function.</p>",
    "params": [
      [
        "gameObject1",
        "InteractableGameObject"
      ],
      [
        "gameObject2",
        "InteractableGameObject"
      ]
    ],
    "retType": "boolean"
  },
  "get_game_time": {
    "kind": "function",
    "name": "get_game_time",
    "description": "<p>Gets the current in-game time, which is based off the start time.\nThis function should be called in your update function.</p>",
    "params": [],
    "retType": "number"
  },
  "get_loop_count": {
    "kind": "function",
    "name": "get_loop_count",
    "description": "<p>Gets the current loop count, which is the number of frames that have run.\nDepends on the framerate set for how fast this changes.\nThis function should be called in your update function.</p>",
    "params": [],
    "retType": "number"
  },
  "input_key_down": {
    "kind": "function",
    "name": "input_key_down",
    "description": "<p>Detects if a key input is pressed down.\nThis function must be called in your update function to detect inputs.\nTo get specific keys, go to https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key#result.</p>",
    "params": [
      [
        "key_name",
        "string"
      ]
    ],
    "retType": "boolean"
  },
  "input_left_mouse_down": {
    "kind": "function",
    "name": "input_left_mouse_down",
    "description": "<p>Detects if the left mouse button is pressed down.\nThis function should be called in your update function.</p>",
    "params": [],
    "retType": "boolean"
  },
  "input_right_mouse_down": {
    "kind": "function",
    "name": "input_right_mouse_down",
    "description": "<p>Detects if the right mouse button is pressed down.\nThis function should be called in your update function.</p>",
    "params": [],
    "retType": "boolean"
  },
  "loop_audio": {
    "kind": "function",
    "name": "loop_audio",
    "description": "<p>Loops the audio clip provided, which will play the audio clip indefinitely.\nSetting whether an audio clip should loop be done outside the update function.</p>",
    "params": [
      [
        "audio_clip",
        "AudioClip"
      ]
    ],
    "retType": "AudioClip"
  },
  "play_audio": {
    "kind": "function",
    "name": "play_audio",
    "description": "<p>Plays the audio clip, and stops when the audio clip is over.</p>",
    "params": [
      [
        "audio_clip",
        "AudioClip"
      ]
    ],
    "retType": "AudioClip"
  },
  "pointer_over_gameobject": {
    "kind": "function",
    "name": "pointer_over_gameobject",
    "description": "<p>Detects if the (mouse) pointer is over the gameobject.\nThis function should be called in your update function.</p>",
    "params": [
      [
        "gameObject",
        "GameObject"
      ]
    ],
    "retType": "boolean"
  },
  "query_color": {
    "kind": "function",
    "name": "query_color",
    "description": "<p>Queries the [r, g, b, a] color property of the GameObject.</p>",
    "params": [
      [
        "gameObject",
        "RenderableGameObject"
      ]
    ],
    "retType": "ColorRGBA"
  },
  "query_flip": {
    "kind": "function",
    "name": "query_flip",
    "description": "<p>Queries the [x, y] flip property of the GameObject.</p>",
    "params": [
      [
        "gameObject",
        "RenderableGameObject"
      ]
    ],
    "retType": "FlipXY"
  },
  "query_id": {
    "kind": "function",
    "name": "query_id",
    "description": "<p>Queries the id of the GameObject.\nThe id of a GameObject is in the order of creation, starting from 0.</p>",
    "params": [
      [
        "gameObject",
        "GameObject"
      ]
    ],
    "retType": "number"
  },
  "query_pointer_position": {
    "kind": "function",
    "name": "query_pointer_position",
    "description": "<p>Queries the (mouse) pointer position.</p>",
    "params": [],
    "retType": "PositionXY"
  },
  "query_position": {
    "kind": "function",
    "name": "query_position",
    "description": "<p>Queries the [x, y] position transform of the GameObject.</p>",
    "params": [
      [
        "gameObject",
        "GameObject"
      ]
    ],
    "retType": "PositionXY"
  },
  "query_rotation": {
    "kind": "function",
    "name": "query_rotation",
    "description": "<p>Queries the z-rotation transform of the GameObject.</p>",
    "params": [
      [
        "gameObject",
        "GameObject"
      ]
    ],
    "retType": "number"
  },
  "query_scale": {
    "kind": "function",
    "name": "query_scale",
    "description": "<p>Queries the [x, y] scale transform of the GameObject.</p>",
    "params": [
      [
        "gameObject",
        "GameObject"
      ]
    ],
    "retType": "ScaleXY"
  },
  "query_text": {
    "kind": "function",
    "name": "query_text",
    "description": "<p>Queries the text of a Text GameObject.</p>",
    "params": [
      [
        "textGameObject",
        "TextGameObject"
      ]
    ],
    "retType": "string"
  },
  "set_dimensions": {
    "kind": "function",
    "name": "set_dimensions",
    "description": "<p>Sets the dimensions of the canvas, which should be between the\nmin and max widths and height.</p>",
    "params": [
      [
        "dimensions",
        "DimensionsXY"
      ]
    ],
    "retType": "void"
  },
  "set_fps": {
    "kind": "function",
    "name": "set_fps",
    "description": "<p>Sets the frames per second of the canvas, which should be between the MIN_FPS and MAX_FPS.\nIt ranges between 1 and 120, with the default target as 30.\nThis function should not be called in the update function.</p>",
    "params": [
      [
        "fps",
        "number"
      ]
    ],
    "retType": "void"
  },
  "set_scale": {
    "kind": "function",
    "name": "set_scale",
    "description": "<p>Sets the scale (zoom) of the pixels in the canvas.\nIf scale is doubled, then the number of units across would be halved.\nThis has a side effect of making the game pixelated if scale &gt; 1.\nThe default scale is 1.</p>",
    "params": [
      [
        "scale",
        "number"
      ]
    ],
    "retType": "void"
  },
  "stop_audio": {
    "kind": "function",
    "name": "stop_audio",
    "description": "<p>Stops the audio clip immediately.</p>",
    "params": [
      [
        "audio_clip",
        "AudioClip"
      ]
    ],
    "retType": "AudioClip"
  },
  "update_color": {
    "kind": "function",
    "name": "update_color",
    "description": "<p>Updates the color of the GameObject.\nNote that the value is modulo 256, so passing values greater than 255 is allowed.</p>",
    "params": [
      [
        "gameObject",
        "GameObject"
      ],
      [
        "color",
        "ColorRGBA"
      ]
    ],
    "retType": "GameObject"
  },
  "update_flip": {
    "kind": "function",
    "name": "update_flip",
    "description": "<p>Updates the flip state of the GameObject.</p>",
    "params": [
      [
        "gameObject",
        "GameObject"
      ],
      [
        "flip",
        "FlipXY"
      ]
    ],
    "retType": "GameObject"
  },
  "update_loop": {
    "kind": "function",
    "name": "update_loop",
    "description": "<p>This sets the update loop in the canvas.\nThe update loop is run once per frame, so it depends on the fps set for the number of times this loop is run.\nThere should only be one update_loop called.\nAll game logic should be handled within your update_function.\nYou cannot create GameObjects inside the update_loop.\ngame_state is an array that can be modified to store anything.</p>",
    "params": [
      [
        "update_function",
        "UpdateFunction"
      ]
    ],
    "retType": "void"
  },
  "update_position": {
    "kind": "function",
    "name": "update_position",
    "description": "<p>Updates the position transform of the GameObject.</p>",
    "params": [
      [
        "gameObject",
        "GameObject"
      ],
      [
        "coordinates",
        "PositionXY"
      ]
    ],
    "retType": "GameObject"
  },
  "update_rotation": {
    "kind": "function",
    "name": "update_rotation",
    "description": "<p>Updates the rotation transform of the GameObject.</p>",
    "params": [
      [
        "gameObject",
        "GameObject"
      ],
      [
        "radians",
        "number"
      ]
    ],
    "retType": "GameObject"
  },
  "update_scale": {
    "kind": "function",
    "name": "update_scale",
    "description": "<p>Updates the scale transform of the GameObject.</p>",
    "params": [
      [
        "gameObject",
        "GameObject"
      ],
      [
        "scale",
        "ScaleXY"
      ]
    ],
    "retType": "GameObject"
  },
  "update_text": {
    "kind": "function",
    "name": "update_text",
    "description": "<p>Updates the text of the TextGameObject.</p>",
    "params": [
      [
        "textGameObject",
        "TextGameObject"
      ],
      [
        "text",
        "string"
      ]
    ],
    "retType": "GameObject"
  },
  "update_to_top": {
    "kind": "function",
    "name": "update_to_top",
    "description": "<p>Renders this GameObject in front of all other GameObjects.</p>",
    "params": [
      [
        "gameObject",
        "GameObject"
      ]
    ],
    "retType": "GameObject"
  }
}