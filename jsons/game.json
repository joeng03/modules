{
  "add": {
    "kind": "function",
    "name": "add",
    "description": "<p>Add the object to the scene. Only objects added to the scene\nwill appear.</p>",
    "params": [
      [
        "obj",
        "GameObject"
      ]
    ],
    "retType": "GameObject | undefined"
  },
  "add_keyboard_listener": {
    "kind": "function",
    "name": "add_keyboard_listener",
    "description": "<p>Attach a listener to the object. The callback will be executed\nwhen the event is emitted.\nMutate the object.</p><p>For all available events, see:\nhttps://photonstorm.github.io/phaser3-docs/Phaser.Input.Events.html</p><p>For list of keycodes, see:\nhttps://github.com/photonstorm/phaser/blob/v3.22.0/src/input/keyboard/keys/KeyCodes.js</p>",
    "params": [
      [
        "key",
        "string | number"
      ],
      [
        "event",
        "string"
      ],
      [
        "callback",
        "Function"
      ]
    ],
    "retType": "GameObject"
  },
  "add_listener": {
    "kind": "function",
    "name": "add_listener",
    "description": "<p>Attach a listener to the object. The callback will be executed\nwhen the event is emitted.\nMutate the object.</p><p>For all available events, see:\nhttps://photonstorm.github.io/phaser3-docs/Phaser.Input.Events.html</p>",
    "params": [
      [
        "obj",
        "GameObject"
      ],
      [
        "event",
        "string"
      ],
      [
        "callback",
        "Function"
      ]
    ],
    "retType": "GameObject | undefined"
  },
  "add_to_container": {
    "kind": "function",
    "name": "add_to_container",
    "description": "<p>Add the given game object to the container.\nMutates the container.</p>",
    "params": [
      [
        "container",
        "GameObject"
      ],
      [
        "obj",
        "GameObject"
      ]
    ],
    "retType": "GameObject | undefined"
  },
  "add_tween": {
    "kind": "function",
    "name": "add_tween",
    "description": "<p>Creates a tween to the object and plays it.\nMutate the object.</p>",
    "params": [
      [
        "obj",
        "GameObject"
      ],
      [
        "config",
        "ObjectConfig"
      ]
    ],
    "retType": "Promise<GameObject | undefined>"
  },
  "create_anim": {
    "kind": "function",
    "name": "create_anim",
    "description": "<p>Create a new animation and add it to the available animations.\nAnimations are global i.e. once created, it can be used anytime, anywhere.</p><p>NOTE: Anims DO NOT need to be added into the scene to be used.\nIt is automatically added to the scene when it is created.</p><p>Will return true if the animation key is valid\n(key is specified within the anim_config); false if the key\nis already in use.</p>",
    "params": [
      [
        "anim_config",
        "ObjectConfig"
      ]
    ],
    "retType": "boolean"
  },
  "create_anim_config": {
    "kind": "function",
    "name": "create_anim_config",
    "description": "<p>Create anims config, can be used to configure anims</p><p>For more details about the config object, see:\nhttps://photonstorm.github.io/phaser3-docs/Phaser.Types.Animations.html#.Animation</p>",
    "params": [
      [
        "anims_key",
        "string"
      ],
      [
        "anim_frames",
        "ObjectConfig[]"
      ],
      [
        "frame_rate",
        "number"
      ],
      [
        "duration",
        "any"
      ],
      [
        "repeat",
        "number"
      ],
      [
        "yoyo",
        "boolean"
      ],
      [
        "show_on_start",
        "boolean"
      ],
      [
        "hide_on_complete",
        "boolean"
      ]
    ],
    "retType": "ObjectConfig"
  },
  "create_anim_frame_config": {
    "kind": "function",
    "name": "create_anim_frame_config",
    "description": "<p>Create animation frame config, can be used to configure a specific frame\nwithin an animation.</p><p>The key should refer to an image that is already loaded.\nTo make frame_config from spritesheet based on its frames,\nuse create_anim_spritesheet_frame_configs instead.</p>",
    "params": [
      [
        "key",
        "string"
      ],
      [
        "duration",
        "number"
      ],
      [
        "visible",
        "boolean"
      ]
    ],
    "retType": "ObjectConfig"
  },
  "create_anim_spritesheet_frame_configs": {
    "kind": "function",
    "name": "create_anim_spritesheet_frame_configs",
    "description": "<p>Create list of animation frame config, can be used directly as part of\nanim_config's <code>frames</code> parameter.</p><p>This function will generate list of frame configs based on the\nspritesheet_config attached to the associated spritesheet.\nThis function requires that the given key is a spritesheet key\ni.e. a key associated with loaded spritesheet, loaded in using\nload_spritesheet function.</p><p>Will return empty frame configs if key is not associated with\na spritesheet.</p>",
    "params": [
      [
        "key",
        "string"
      ]
    ],
    "retType": "ObjectConfig[] | undefined"
  },
  "create_award": {
    "kind": "function",
    "name": "create_award",
    "description": "<p>Create an award using the key associated with the award.\nThe award key can be obtained from the Awards Hall or\nAwards menu, after attaining the award.</p><p>Valid award will have an on-hover VERIFIED tag to distinguish\nit from images created by create_image.</p><p>If student does not possess the award, this function will\nreturn a untagged, default image.</p>",
    "params": [
      [
        "x",
        "number"
      ],
      [
        "y",
        "number"
      ],
      [
        "award_key",
        "string"
      ]
    ],
    "retType": "GameObject"
  },
  "create_config": {
    "kind": "function",
    "name": "create_config",
    "description": "<p>Transforms the given list of pairs into an object config. The list follows\nthe format of list(pair(key1, value1), pair(key2, value2), ...).</p><p>e.g list(pair(\"alpha\", 0), pair(\"duration\", 1000))</p>",
    "params": [
      [
        "lst",
        "List"
      ]
    ],
    "retType": "ObjectConfig"
  },
  "create_container": {
    "kind": "function",
    "name": "create_container",
    "description": "<p>Create a container object. Container is able to contain any other game object,\nand the positions of contained game object will be relative to the container.</p><p>Rendering the container as visible or invisible will also affect the contained\ngame object.</p><p>Container can also contain another container.</p><p>0, 0 is located at the top, left hand side.</p><p>For more details about container object, see:\nhttps://photonstorm.github.io/phaser3-docs/Phaser.GameObjects.Container.html</p>",
    "params": [
      [
        "x",
        "number"
      ],
      [
        "y",
        "number"
      ]
    ],
    "retType": "GameObject"
  },
  "create_ellipse": {
    "kind": "function",
    "name": "create_ellipse",
    "description": "<p>Create an ellipse object.</p>",
    "params": [
      [
        "x",
        "number"
      ],
      [
        "y",
        "number"
      ],
      [
        "width",
        "number"
      ],
      [
        "height",
        "number"
      ],
      [
        "fill",
        "number"
      ],
      [
        "alpha",
        "number"
      ]
    ],
    "retType": "GameObject"
  },
  "create_image": {
    "kind": "function",
    "name": "create_image",
    "description": "<p>Create an image using the key associated with a loaded image.\nIf key is not associated with any loaded image, throws error.</p><p>0, 0 is located at the top, left hand side.</p>",
    "params": [
      [
        "x",
        "number"
      ],
      [
        "y",
        "number"
      ],
      [
        "asset_key",
        "string"
      ]
    ],
    "retType": "GameObject | undefined"
  },
  "create_interactive_config": {
    "kind": "function",
    "name": "create_interactive_config",
    "description": "<p>Create interactive config object, can be used to configure interactive settings.</p><p>For more details about interactive config object, see:\nhttps://photonstorm.github.io/phaser3-docs/Phaser.Types.Input.html#.InputConfiguration</p>",
    "params": [
      [
        "draggable",
        "boolean"
      ],
      [
        "use_hand_cursor",
        "boolean"
      ],
      [
        "pixel_perfect",
        "boolean"
      ],
      [
        "alpha_tolerance",
        "number"
      ]
    ],
    "retType": "ObjectConfig"
  },
  "create_rect": {
    "kind": "function",
    "name": "create_rect",
    "description": "<p>Create a rectangle object.</p><p>0, 0 is located at the top, left hand side.</p>",
    "params": [
      [
        "x",
        "number"
      ],
      [
        "y",
        "number"
      ],
      [
        "width",
        "number"
      ],
      [
        "height",
        "number"
      ],
      [
        "fill",
        "number"
      ],
      [
        "alpha",
        "number"
      ]
    ],
    "retType": "GameObject"
  },
  "create_sound_config": {
    "kind": "function",
    "name": "create_sound_config",
    "description": "<p>Create sound config object, can be used to configure sound settings.</p><p>For more details about sound config object, see:\nhttps://photonstorm.github.io/phaser3-docs/Phaser.Types.Sound.html#.SoundConfig</p>",
    "params": [
      [
        "mute",
        "boolean"
      ],
      [
        "volume",
        "number"
      ],
      [
        "rate",
        "number"
      ],
      [
        "detune",
        "number"
      ],
      [
        "seek",
        "number"
      ],
      [
        "loop",
        "boolean"
      ],
      [
        "delay",
        "number"
      ]
    ],
    "retType": "ObjectConfig"
  },
  "create_spritesheet_config": {
    "kind": "function",
    "name": "create_spritesheet_config",
    "description": "<p>Create spritesheet config, can be used to configure the frames within the\nspritesheet. Can be used as config at load_spritesheet.</p>",
    "params": [
      [
        "frame_width",
        "number"
      ],
      [
        "frame_height",
        "number"
      ],
      [
        "start_frame",
        "number"
      ],
      [
        "margin",
        "number"
      ],
      [
        "spacing",
        "number"
      ]
    ],
    "retType": "ObjectConfig"
  },
  "create_text": {
    "kind": "function",
    "name": "create_text",
    "description": "<p>Create a text object.</p><p>0, 0 is located at the top, left hand side.</p>",
    "params": [
      [
        "x",
        "number"
      ],
      [
        "y",
        "number"
      ],
      [
        "text",
        "string"
      ],
      [
        "config",
        "ObjectConfig"
      ]
    ],
    "retType": "GameObject"
  },
  "create_text_config": {
    "kind": "function",
    "name": "create_text_config",
    "description": "<p>Create text config object, can be used to stylise text object.</p><p>font_family: for available font_family, see:\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/font-family#Valid_family_names</p><p>align: must be either 'left', 'right', 'center', or 'justify'</p><p>For more details about text config, see:\nhttps://photonstorm.github.io/phaser3-docs/Phaser.Types.GameObjects.Text.html#.TextStyle</p>",
    "params": [
      [
        "font_family",
        "string"
      ],
      [
        "font_size",
        "string"
      ],
      [
        "color",
        "string"
      ],
      [
        "stroke",
        "string"
      ],
      [
        "stroke_thickness",
        "number"
      ],
      [
        "align",
        "string"
      ]
    ],
    "retType": "ObjectConfig"
  },
  "create_tween_config": {
    "kind": "function",
    "name": "create_tween_config",
    "description": "<p>Create tween config object, can be used to configure tween settings.</p><p>For more details about tween config object, see:\nhttps://photonstorm.github.io/phaser3-docs/Phaser.Types.Tweens.html#.TweenBuilderConfig</p>",
    "params": [
      [
        "target_prop",
        "string"
      ],
      [
        "target_value",
        "string | number"
      ],
      [
        "delay",
        "number"
      ],
      [
        "duration",
        "number"
      ],
      [
        "ease",
        "string | Function"
      ],
      [
        "on_complete",
        "Function"
      ],
      [
        "yoyo",
        "boolean"
      ],
      [
        "loop",
        "number"
      ],
      [
        "loop_delay",
        "number"
      ],
      [
        "on_loop",
        "Function"
      ]
    ],
    "retType": "ObjectConfig"
  },
  "destroy_obj": {
    "kind": "function",
    "name": "destroy_obj",
    "description": "<p>Destroy the given game object. Destroyed game object\nis removed from the scene, and all of its listeners\nis also removed.</p>",
    "params": [
      [
        "obj",
        "GameObject"
      ]
    ],
    "retType": "void"
  },
  "get_screen_display_height": {
    "kind": "function",
    "name": "get_screen_display_height",
    "description": "<p>Get game screen display height (accounting window size).</p>",
    "params": [],
    "retType": "number"
  },
  "get_screen_display_width": {
    "kind": "function",
    "name": "get_screen_display_width",
    "description": "<p>Get game screen display width (accounting window size).</p>",
    "params": [],
    "retType": "number"
  },
  "get_screen_height": {
    "kind": "function",
    "name": "get_screen_height",
    "description": "<p>Get in-game screen height.</p>",
    "params": [],
    "retType": "number"
  },
  "get_screen_width": {
    "kind": "function",
    "name": "get_screen_width",
    "description": "<p>Get in-game screen width.</p>",
    "params": [],
    "retType": "number"
  },
  "load_image": {
    "kind": "function",
    "name": "load_image",
    "description": "<p>Load the image asset into the scene for use. All images\nmust be loaded before used in create_image.</p>",
    "params": [
      [
        "key",
        "string"
      ],
      [
        "url",
        "string"
      ]
    ],
    "retType": "void"
  },
  "load_sound": {
    "kind": "function",
    "name": "load_sound",
    "description": "<p>Load the sound asset into the scene for use. All sound\nmust be loaded before used in play_sound.</p>",
    "params": [
      [
        "key",
        "string"
      ],
      [
        "url",
        "string"
      ]
    ],
    "retType": "void"
  },
  "load_spritesheet": {
    "kind": "function",
    "name": "load_spritesheet",
    "description": "<p>Load the spritesheet into the scene for use. All spritesheet must\nbe loaded before used in create_image.</p>",
    "params": [
      [
        "key",
        "string"
      ],
      [
        "url",
        "string"
      ],
      [
        "spritesheet_config",
        "ObjectConfig"
      ]
    ],
    "retType": "void"
  },
  "play_anim_on_image": {
    "kind": "function",
    "name": "play_anim_on_image",
    "description": "<p>Start playing the given animation on image game object.</p>",
    "params": [
      [
        "image",
        "GameObject"
      ],
      [
        "anims_key",
        "string"
      ]
    ],
    "retType": "GameObject | undefined"
  },
  "play_sound": {
    "kind": "function",
    "name": "play_sound",
    "description": "<p>Play the sound associated with the key.\nThrows error if key is non-existent.</p>",
    "params": [
      [
        "key",
        "string"
      ],
      [
        "config",
        "ObjectConfig"
      ]
    ],
    "retType": "void"
  },
  "prepend_remote_url": {
    "kind": "function",
    "name": "prepend_remote_url",
    "description": "<p>Prepend the given asset key with the remote path (S3 path).</p>",
    "params": [
      [
        "asset_key",
        "string"
      ]
    ],
    "retType": "string"
  },
  "remove_listener": {
    "kind": "function",
    "name": "remove_listener",
    "description": "<p>Deactivate and remove listener.</p>",
    "params": [
      [
        "listener",
        "GameObject"
      ]
    ],
    "retType": "boolean"
  },
  "set_alpha": {
    "kind": "function",
    "name": "set_alpha",
    "description": "<p>Set the alpha of the object.\nMutate the object.</p>",
    "params": [
      [
        "obj",
        "GameObject"
      ],
      [
        "alpha",
        "number"
      ]
    ],
    "retType": "GameObject | undefined"
  },
  "set_display_size": {
    "kind": "function",
    "name": "set_display_size",
    "description": "<p>Set the display size of the object.\nMutate the object.</p>",
    "params": [
      [
        "obj",
        "GameObject"
      ],
      [
        "x",
        "number"
      ],
      [
        "y",
        "number"
      ]
    ],
    "retType": "GameObject | undefined"
  },
  "set_flip": {
    "kind": "function",
    "name": "set_flip",
    "description": "<p>Sets the horizontal and flipped state of the object.\nMutate the object.</p>",
    "params": [
      [
        "obj",
        "GameObject"
      ],
      [
        "x",
        "boolean"
      ],
      [
        "y",
        "boolean"
      ]
    ],
    "retType": "GameObject | undefined"
  },
  "set_interactive": {
    "kind": "function",
    "name": "set_interactive",
    "description": "<p>Set the interactivity of the object.\nMutate the object.</p><p>Rectangle and Ellipse are not able to receive configs, only boolean\ni.e. set_interactive(rect, true); set_interactive(ellipse, false)</p>",
    "params": [
      [
        "obj",
        "GameObject"
      ],
      [
        "config",
        "ObjectConfig"
      ]
    ],
    "retType": "GameObject | undefined"
  },
  "set_origin": {
    "kind": "function",
    "name": "set_origin",
    "description": "<p>Set the origin in which all position related will be relative to.\nIn other words, the anchor of the object.\nMutate the object.</p>",
    "params": [
      [
        "obj",
        "GameObject"
      ],
      [
        "x",
        "number"
      ],
      [
        "y",
        "number"
      ]
    ],
    "retType": "GameObject | undefined"
  },
  "set_position": {
    "kind": "function",
    "name": "set_position",
    "description": "<p>Set the position of the game object\nMutate the object</p>",
    "params": [
      [
        "obj",
        "GameObject"
      ],
      [
        "x",
        "number"
      ],
      [
        "y",
        "number"
      ]
    ],
    "retType": "GameObject | undefined"
  },
  "set_rotation": {
    "kind": "function",
    "name": "set_rotation",
    "description": "<p>Set the rotation of the object.\nMutate the object.</p>",
    "params": [
      [
        "obj",
        "GameObject"
      ],
      [
        "rad",
        "number"
      ]
    ],
    "retType": "GameObject | undefined"
  },
  "set_scale": {
    "kind": "function",
    "name": "set_scale",
    "description": "<p>Set the scale of the object.\nMutate the object.</p>",
    "params": [
      [
        "obj",
        "GameObject"
      ],
      [
        "x",
        "number"
      ],
      [
        "y",
        "number"
      ]
    ],
    "retType": "GameObject | undefined"
  }
}