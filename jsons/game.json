{
  "add": "<div><h4>add(obj: GameObject) → {undefined}</h4><div class=\"description\"><p>Add the object to the scene. Only objects added to the scene\nwill appear.</p></div></div>",
  "add_keyboard_listener": "<div><h4>add_keyboard_listener(key: undefined, event: string, callback: Function) → {GameObject}</h4><div class=\"description\"><p>Attach a listener to the object. The callback will be executed\nwhen the event is emitted.\nMutate the object.</p><p>For all available events, see:\nhttps://photonstorm.github.io/phaser3-docs/Phaser.Input.Events.html</p><p>For list of keycodes, see:\nhttps://github.com/photonstorm/phaser/blob/v3.22.0/src/input/keyboard/keys/KeyCodes.js</p></div></div>",
  "add_listener": "<div><h4>add_listener(obj: GameObject, event: string, callback: Function) → {undefined}</h4><div class=\"description\"><p>Attach a listener to the object. The callback will be executed\nwhen the event is emitted.\nMutate the object.</p><p>For all available events, see:\nhttps://photonstorm.github.io/phaser3-docs/Phaser.Input.Events.html</p></div></div>",
  "add_to_container": "<div><h4>add_to_container(container: GameObject, obj: GameObject) → {undefined}</h4><div class=\"description\"><p>Add the given game object to the container.\nMutates the container.</p></div></div>",
  "add_tween": "<div><h4>add_tween(obj: GameObject, config: ObjectConfig) → {Promise}</h4><div class=\"description\"><p>Creates a tween to the object and plays it.\nMutate the object.</p></div></div>",
  "create_anim": "<div><h4>create_anim(anim_config: ObjectConfig) → {boolean}</h4><div class=\"description\"><p>Create a new animation and add it to the available animations.\nAnimations are global i.e. once created, it can be used anytime, anywhere.</p><p>NOTE: Anims DO NOT need to be added into the scene to be used.\nIt is automatically added to the scene when it is created.</p><p>Will return true if the animation key is valid\n(key is specified within the anim_config); false if the key\nis already in use.</p></div></div>",
  "create_anim_config": "<div><h4>create_anim_config(anims_key: string, anim_frames: undefined, frame_rate: number, duration: any, repeat: number, yoyo: boolean, show_on_start: boolean, hide_on_complete: boolean) → {ObjectConfig}</h4><div class=\"description\"><p>Create anims config, can be used to configure anims</p><p>For more details about the config object, see:\nhttps://photonstorm.github.io/phaser3-docs/Phaser.Types.Animations.html#.Animation</p></div></div>",
  "create_anim_frame_config": "<div><h4>create_anim_frame_config(key: string, duration: number, visible: boolean) → {ObjectConfig}</h4><div class=\"description\"><p>Create animation frame config, can be used to configure a specific frame\nwithin an animation.</p><p>The key should refer to an image that is already loaded.\nTo make frame_config from spritesheet based on its frames,\nuse create_anim_spritesheet_frame_configs instead.</p></div></div>",
  "create_anim_spritesheet_frame_configs": "<div><h4>create_anim_spritesheet_frame_configs(key: string) → {undefined}</h4><div class=\"description\"><p>Create list of animation frame config, can be used directly as part of\nanim_config's <code>frames</code> parameter.</p><p>This function will generate list of frame configs based on the\nspritesheet_config attached to the associated spritesheet.\nThis function requires that the given key is a spritesheet key\ni.e. a key associated with loaded spritesheet, loaded in using\nload_spritesheet function.</p><p>Will return empty frame configs if key is not associated with\na spritesheet.</p></div></div>",
  "create_award": "<div><h4>create_award(x: number, y: number, award_key: string) → {GameObject}</h4><div class=\"description\"><p>Create an award using the key associated with the award.\nThe award key can be obtained from the Awards Hall or\nAwards menu, after attaining the award.</p><p>Valid award will have an on-hover VERIFIED tag to distinguish\nit from images created by create_image.</p><p>If student does not possess the award, this function will\nreturn a untagged, default image.</p></div></div>",
  "create_config": "<div><h4>create_config(lst: List) → {ObjectConfig}</h4><div class=\"description\"><p>Transforms the given list of pairs into an object config. The list follows\nthe format of list(pair(key1, value1), pair(key2, value2), ...).</p><p>e.g list(pair(\"alpha\", 0), pair(\"duration\", 1000))</p></div></div>",
  "create_container": "<div><h4>create_container(x: number, y: number) → {GameObject}</h4><div class=\"description\"><p>Create a container object. Container is able to contain any other game object,\nand the positions of contained game object will be relative to the container.</p><p>Rendering the container as visible or invisible will also affect the contained\ngame object.</p><p>Container can also contain another container.</p><p>0, 0 is located at the top, left hand side.</p><p>For more details about container object, see:\nhttps://photonstorm.github.io/phaser3-docs/Phaser.GameObjects.Container.html</p></div></div>",
  "create_ellipse": "<div><h4>create_ellipse(x: number, y: number, width: number, height: number, fill: number, alpha: number) → {GameObject}</h4><div class=\"description\"><p>Create an ellipse object.</p></div></div>",
  "create_image": "<div><h4>create_image(x: number, y: number, asset_key: string) → {undefined}</h4><div class=\"description\"><p>Create an image using the key associated with a loaded image.\nIf key is not associated with any loaded image, throws error.</p><p>0, 0 is located at the top, left hand side.</p></div></div>",
  "create_interactive_config": "<div><h4>create_interactive_config(draggable: boolean, use_hand_cursor: boolean, pixel_perfect: boolean, alpha_tolerance: number) → {ObjectConfig}</h4><div class=\"description\"><p>Create interactive config object, can be used to configure interactive settings.</p><p>For more details about interactive config object, see:\nhttps://photonstorm.github.io/phaser3-docs/Phaser.Types.Input.html#.InputConfiguration</p></div></div>",
  "create_rect": "<div><h4>create_rect(x: number, y: number, width: number, height: number, fill: number, alpha: number) → {GameObject}</h4><div class=\"description\"><p>Create a rectangle object.</p><p>0, 0 is located at the top, left hand side.</p></div></div>",
  "create_sound_config": "<div><h4>create_sound_config(mute: boolean, volume: number, rate: number, detune: number, seek: number, loop: boolean, delay: number) → {ObjectConfig}</h4><div class=\"description\"><p>Create sound config object, can be used to configure sound settings.</p><p>For more details about sound config object, see:\nhttps://photonstorm.github.io/phaser3-docs/Phaser.Types.Sound.html#.SoundConfig</p></div></div>",
  "create_spritesheet_config": "<div><h4>create_spritesheet_config(frame_width: number, frame_height: number, start_frame: number, margin: number, spacing: number) → {ObjectConfig}</h4><div class=\"description\"><p>Create spritesheet config, can be used to configure the frames within the\nspritesheet. Can be used as config at load_spritesheet.</p></div></div>",
  "create_text": "<div><h4>create_text(x: number, y: number, text: string, config: ObjectConfig) → {GameObject}</h4><div class=\"description\"><p>Create a text object.</p><p>0, 0 is located at the top, left hand side.</p></div></div>",
  "create_text_config": "<div><h4>create_text_config(font_family: string, font_size: string, color: string, stroke: string, stroke_thickness: number, align: string) → {ObjectConfig}</h4><div class=\"description\"><p>Create text config object, can be used to stylise text object.</p><p>font_family: for available font_family, see:\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/font-family#Valid_family_names</p><p>align: must be either 'left', 'right', 'center', or 'justify'</p><p>For more details about text config, see:\nhttps://photonstorm.github.io/phaser3-docs/Phaser.Types.GameObjects.Text.html#.TextStyle</p></div></div>",
  "create_tween_config": "<div><h4>create_tween_config(target_prop: string, target_value: undefined, delay: number, duration: number, ease: undefined, on_complete: Function, yoyo: boolean, loop: number, loop_delay: number, on_loop: Function) → {ObjectConfig}</h4><div class=\"description\"><p>Create tween config object, can be used to configure tween settings.</p><p>For more details about tween config object, see:\nhttps://photonstorm.github.io/phaser3-docs/Phaser.Types.Tweens.html#.TweenBuilderConfig</p></div></div>",
  "destroy_obj": "<div><h4>destroy_obj(obj: GameObject) → {void}</h4><div class=\"description\"><p>Destroy the given game object. Destroyed game object\nis removed from the scene, and all of its listeners\nis also removed.</p></div></div>",
  "get_screen_display_height": "<div><h4>get_screen_display_height() → {number}</h4><div class=\"description\"><p>Get game screen display height (accounting window size).</p></div></div>",
  "get_screen_display_width": "<div><h4>get_screen_display_width() → {number}</h4><div class=\"description\"><p>Get game screen display width (accounting window size).</p></div></div>",
  "get_screen_height": "<div><h4>get_screen_height() → {number}</h4><div class=\"description\"><p>Get in-game screen height.</p></div></div>",
  "get_screen_width": "<div><h4>get_screen_width() → {number}</h4><div class=\"description\"><p>Get in-game screen width.</p></div></div>",
  "load_image": "<div><h4>load_image(key: string, url: string) → {void}</h4><div class=\"description\"><p>Load the image asset into the scene for use. All images\nmust be loaded before used in create_image.</p></div></div>",
  "load_sound": "<div><h4>load_sound(key: string, url: string) → {void}</h4><div class=\"description\"><p>Load the sound asset into the scene for use. All sound\nmust be loaded before used in play_sound.</p></div></div>",
  "load_spritesheet": "<div><h4>load_spritesheet(key: string, url: string, spritesheet_config: ObjectConfig) → {void}</h4><div class=\"description\"><p>Load the spritesheet into the scene for use. All spritesheet must\nbe loaded before used in create_image.</p></div></div>",
  "play_anim_on_image": "<div><h4>play_anim_on_image(image: GameObject, anims_key: string) → {undefined}</h4><div class=\"description\"><p>Start playing the given animation on image game object.</p></div></div>",
  "play_sound": "<div><h4>play_sound(key: string, config: ObjectConfig) → {void}</h4><div class=\"description\"><p>Play the sound associated with the key.\nThrows error if key is non-existent.</p></div></div>",
  "prepend_remote_url": "<div><h4>prepend_remote_url(asset_key: string) → {string}</h4><div class=\"description\"><p>Prepend the given asset key with the remote path (S3 path).</p></div></div>",
  "remove_listener": "<div><h4>remove_listener(listener: GameObject) → {boolean}</h4><div class=\"description\"><p>Deactivate and remove listener.</p></div></div>",
  "set_alpha": "<div><h4>set_alpha(obj: GameObject, alpha: number) → {undefined}</h4><div class=\"description\"><p>Set the alpha of the object.\nMutate the object.</p></div></div>",
  "set_display_size": "<div><h4>set_display_size(obj: GameObject, x: number, y: number) → {undefined}</h4><div class=\"description\"><p>Set the display size of the object.\nMutate the object.</p></div></div>",
  "set_flip": "<div><h4>set_flip(obj: GameObject, x: boolean, y: boolean) → {undefined}</h4><div class=\"description\"><p>Sets the horizontal and flipped state of the object.\nMutate the object.</p></div></div>",
  "set_interactive": "<div><h4>set_interactive(obj: GameObject, config: ObjectConfig) → {undefined}</h4><div class=\"description\"><p>Set the interactivity of the object.\nMutate the object.</p><p>Rectangle and Ellipse are not able to receive configs, only boolean\ni.e. set_interactive(rect, true); set_interactive(ellipse, false)</p></div></div>",
  "set_origin": "<div><h4>set_origin(obj: GameObject, x: number, y: number) → {undefined}</h4><div class=\"description\"><p>Set the origin in which all position related will be relative to.\nIn other words, the anchor of the object.\nMutate the object.</p></div></div>",
  "set_position": "<div><h4>set_position(obj: GameObject, x: number, y: number) → {undefined}</h4><div class=\"description\"><p>Set the position of the game object\nMutate the object</p></div></div>",
  "set_rotation": "<div><h4>set_rotation(obj: GameObject, rad: number) → {undefined}</h4><div class=\"description\"><p>Set the rotation of the object.\nMutate the object.</p></div></div>",
  "set_scale": "<div><h4>set_scale(obj: GameObject, x: number, y: number) → {undefined}</h4><div class=\"description\"><p>Set the scale of the object.\nMutate the object.</p></div></div>"
}